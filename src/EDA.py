# -*- coding: utf-8 -*-
"""EDA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yGCKdcfGqYlBvKEj1Tn7iiyfV9-SxW8X
"""

import pandas as pd
import matplotlib.pyplot as plt
import requests


df = pd.read_csv('/content/Lable_data.csv')

df

df.groupby('auto_lable').size().plot(kind='bar', title='number of persons per class')

len(df[df['auto_lable']=='negative']),len(df[df['auto_lable']=='neutral']),len(df[df['auto_lable']=='positive'])

df[df['likes'].isna()]

df[df['likes']==100]

df['likes'].value_counts()

df_1000 = df[:1000]

def get_gender(user_name):
  response = requests.get("https://gender-api.com/get?name="+ user_name +"&key=rUGC3e5SkfuY5PgNya7sbHD3qNsrY4D8qypK")
  return response.json()['gender']

names = ['AMAL','RICK', 'LUJAIN', 'othman', 'abwmhmd','ealam']
for name in names:
  print(f'{name} is a {get_gender(name)}')

df_1000['gender'] = df_1000['username'].apply(str).apply(str.capitalize).map(lambda x: get_gender(x))

df_1000['gender'].value_counts()

"""### Visualization"""

# 
fig, ax1 = plt.subplots(ncols=1, figsize=(10, 5))
df_1000.groupby('gender').size().plot(kind='bar', ax=ax1, ylabel='Count', title='number of persons by gender')
plt.show()

df_1000[df_1000['gender']=='unknown']['username']

len(df_1000[df_1000['gender']=='male']),len(df_1000[df_1000['gender']=='female'])

fig, ax1 = plt.subplots(ncols=1, figsize=(10, 5))

df_1000.groupby('auto_lable').size().plot(kind='bar', ax=ax1, ylabel='Count', title='number of persons by class')

plt.show()

len(df_1000[df_1000['auto_lable']=='negative'])

fig, ax1 = plt.subplots(ncols=1, figsize=(10, 5))

df_1000[df_1000['gender']=='female'].groupby('auto_lable').size().plot(kind='bar', ax=ax1, ylabel='Count', title='number of females by class')

plt.show()

len(df_1000[df_1000['gender']=='female'][df_1000['auto_lable']=='negative'])

fig, ax1 = plt.subplots(ncols=1, figsize=(10, 5))

df_1000[df_1000['gender']=='male'].groupby('auto_lable').size().plot(kind='bar',ax=ax1, ylabel='Count', title='number of males by class')

plt.show()

len(df_1000[df_1000['gender']=='male'][df_1000['auto_lable']=='negative'])

len(df_1000[df_1000['gender']=='unknown'][df_1000['auto_lable']=='negative'])

df_1000[['retweets','gender']].groupby('gender').sum().plot(kind='bar',y='retweets',title="Number of Retweets for every gender")

df_1000[['retweets','auto_lable']].groupby('auto_lable').sum().plot(kind='bar',y='retweets',title="Number of Retweets for every labels")

df_1000[['likes','gender']].groupby('gender').sum().plot(kind='bar',y='likes',title="Number of likes for every gender")

df_1000[['likes','auto_lable']].groupby('auto_lable').sum().plot(kind='bar',y='likes',title="Number of likes for every labels")



all_data = pd.read_csv('/content/final_data.csv')

all_data

all_data['camel_labe'][0]

def clean_(text):
  t=text[2:]
  r=t[:len(t)-2]
  return r

clean_(all_data['camel_labe'][0])

all_data['cleaned_camel'] = all_data['camel_labe'].apply(clean_)

all_data.loc[all_data['cleaned_camel']=='positive',:]

all_data.loc[all_data['cleaned_camel']=='negative',:]

all_data.loc[all_data['cleaned_camel']=='neutral',:]

all_data.groupby('cleaned_camel').size().plot(kind='bar', title='number of persons per class Camel')

df.groupby('auto_lable').size().plot(kind='bar', title='number of persons per class Mazajek')

diff_df = all_data[all_data['auto_lable'] != all_data['cleaned_camel']]

diff_df = diff_df[['norm_text','auto_lable','cleaned_camel']]

diff_df

diff_df.sample(15)

